name: TanStack Router Sync

# Automatically regenerate TanStack Router files when routes or configuration change
on:
  pull_request:
    types: [opened, synchronize, reopened]
    paths:
      # Package management files
      - 'package.json'
      - 'pnpm-lock.yaml'
      - 'yarn.lock'
      - 'package-lock.json'

      # Route source files
      - 'src/routes/**'
      - 'app/routes/**'
      - 'pages/**'

      # Configuration files that affect routing
      - 'tsconfig.json'
      - 'vite.config.*'
      - 'tsr.config.*'
      - 'tanstack-router.config.*'

  workflow_dispatch:
    inputs:
      force_regenerate:
        description: 'Force regenerate even if no changes detected'
        type: boolean
        default: false

permissions:
  contents: write
  pull-requests: write
  actions: read

jobs:
  regenerate-router-files:
    name: Regenerate TanStack Router Files
    runs-on: ubuntu-latest
    timeout-minutes: 10

    steps:
      - name: Checkout repository
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        with:
          ref: ${{ github.head_ref }}
          token: ${{ secrets.GITHUB_TOKEN }}
          fetch-depth: 0

      - name: Setup pnpm
        uses: pnpm/action-setup@a7487c7e89a18df4991f7f222e4898a00d66ddda # v4.1.0

      - name: Setup Node.js
        uses: actions/setup-node@49933ea5288caeca8642d1e84afbd3f7d6820020 # v4.4.0
        with:
          node-version-file: package.json
          cache: 'pnpm'

      - name: Install project dependencies
        run: pnpm install

      # Verify TanStack Router is installed and detect generation method
      - name: Check for TanStack Router configuration
        id: check-tsr-config
        run: |
          # Check if TanStack Router is installed
          if ! pnpm list @tanstack/router &>/dev/null; then
            echo "::warning::TanStack Router not found in dependencies"
            echo "has_tsr=false" >> $GITHUB_OUTPUT
            exit 0
          fi

          echo "has_tsr=true" >> $GITHUB_OUTPUT

          # Detect available generation scripts
          if jq -e '.scripts["generate:routes"]' package.json > /dev/null; then
            echo "script_name=generate:routes" >> $GITHUB_OUTPUT
          elif jq -e '.scripts["tsr:generate"]' package.json > /dev/null; then
            echo "script_name=tsr:generate" >> $GITHUB_OUTPUT
          elif jq -e '.scripts["router:generate"]' package.json > /dev/null; then
            echo "script_name=router:generate" >> $GITHUB_OUTPUT
          else
            echo "script_name=tsr-cli" >> $GITHUB_OUTPUT
          fi

      - name: Generate TanStack Router files
        if: steps.check-tsr-config.outputs.has_tsr == 'true'
        run: |
          case "${{ steps.check-tsr-config.outputs.script_name }}" in
            "tsr-cli")
              echo "Using TanStack Router CLI directly"
              pnpm exec tsr generate
              ;;
            *)
              echo "Using npm script: ${{ steps.check-tsr-config.outputs.script_name }}"
              pnpm run ${{ steps.check-tsr-config.outputs.script_name }}
              ;;
          esac

      # Commit any generated changes back to the PR branch
      - name: Detect and commit changes
        id: commit-changes
        if: steps.check-tsr-config.outputs.has_tsr == 'true'
        run: |
          # Configure git identity for GitHub Actions bot
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"

          git add .

          # Check if there are staged changes
          if git diff --staged --quiet && [[ "${{ inputs.force_regenerate }}" != "true" ]]; then
            echo "No changes detected in generated files"
            echo "changes_committed=false" >> $GITHUB_OUTPUT
          else
            echo "Changes detected, committing to branch"
            
            commit_msg="chore(router): regenerate TanStack Router files
            
            - Updated route tree and type definitions
            - Generated by: ${{ github.workflow }} workflow
            - Triggered by: ${{ github.event_name }}
            - Commit: ${{ github.sha }}"
            
            git commit -m "$commit_msg"
            git push origin ${{ github.head_ref }}
            
            echo "changes_committed=true" >> $GITHUB_OUTPUT
          fi

      - name: Add PR comment for successful regeneration
        if: |
          steps.commit-changes.outputs.changes_committed == 'true' && 
          github.event_name == 'pull_request'
        uses: actions/github-script@60a0d83039c74a4aee543508d2ffcb1c3799cdea # v7.0.1
        with:
          script: |
            const { owner, repo } = context.repo;
            const { number: issue_number } = context.issue;

            const comment = `## 🔄 TanStack Router Files Updated

            The route tree and related TypeScript definitions have been automatically regenerated and committed to this branch.

            **Generated files may include:**
            - Route tree definitions
            - Type-safe route configurations  
            - Route manifest files

            **Workflow:** \`${{ github.workflow }}\`
            **Commit:** \`${{ github.sha }}\`

            > These changes ensure your routes stay in sync with the latest code changes.`;

            await github.rest.issues.createComment({
              owner,
              repo,
              issue_number,
              body: comment
            });

      # Handle projects without TanStack Router
      - name: Handle missing TanStack Router
        if: steps.check-tsr-config.outputs.has_tsr == 'false'
        uses: actions/github-script@60a0d83039c74a4aee543508d2ffcb1c3799cdea # v7.0.1
        with:
          script: |
            console.log('TanStack Router not found in project dependencies');
            console.log('Skipping route generation step');

            if (context.eventName === 'pull_request') {
              const { owner, repo } = context.repo;
              const { number: issue_number } = context.issue;
              
              await github.rest.issues.createComment({
                owner,
                repo,
                issue_number,  
                body: '⚠️ **TanStack Router not detected** - Skipping route generation as `@tanstack/router` was not found in project dependencies.'
              });
            }

      - name: Workflow summary
        run: |
          echo "## TanStack Router Sync Summary" >> $GITHUB_STEP_SUMMARY
          echo "- **TanStack Router detected:** ${{ steps.check-tsr-config.outputs.has_tsr }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Generation method:** ${{ steps.check-tsr-config.outputs.script_name }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Changes committed:** ${{ steps.commit-changes.outputs.changes_committed || 'N/A' }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Workflow trigger:** ${{ github.event_name }}" >> $GITHUB_STEP_SUMMARY
