name: Regenerate Route Tree on Dependency Updates

on:
  pull_request_target:
    types: [opened, synchronize, reopened]
    paths:
      - 'package.json'
      - 'pnpm-lock.yaml'

permissions:
  contents: write
  pull-requests: write
  actions: read

jobs:
  check-router-changes:
    if: github.actor == 'renovate[bot]' || github.actor == 'renovate-bot'
    runs-on: ubuntu-latest
    outputs:
      needs-regeneration: ${{ steps.check.outputs.needs-regeneration }}
    steps:
      - name: Checkout PR
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4
        with:
          ref: ${{ github.event.pull_request.head.ref }}
          repository: ${{ github.event.pull_request.head.repo.full_name }}
          token: ${{ secrets.GITHUB_TOKEN }}
          fetch-depth: 2

      - name: Check if router packages changed
        id: check
        run: |
          if git diff HEAD~1 HEAD --name-only | grep -E "(package\.json|pnpm-lock\.yaml)" && \
             git diff HEAD~1 HEAD | grep -E "@tanstack"; then
            echo "needs-regeneration=true" >> $GITHUB_OUTPUT
            echo "TanStack packages detected in changes"
          else
            echo "needs-regeneration=false" >> $GITHUB_OUTPUT
            echo "No TanStack package changes detected"
          fi

  regenerate-route-tree:
    needs: check-router-changes
    if: needs.check-router-changes.outputs.needs-regeneration == 'true'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout PR
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4
        with:
          ref: ${{ github.event.pull_request.head.ref }}
          repository: ${{ github.event.pull_request.head.repo.full_name }}
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup pnpm
        uses: pnpm/action-setup@a7487c7e89a18df4991f7f222e4898a00d66ddda # v4

      - name: Setup Node.js
        uses: actions/setup-node@49933ea5288caeca8642d1e84afbd3f7d6820020 # v4
        with:
          node-version-file: package.json
          cache: 'pnpm'

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Generate route tree
        run: pnpm generate-routes

      - name: Check for generated changes
        id: changes
        run: |
          git add .
          if git diff --staged --quiet; then
            echo "has-changes=false" >> $GITHUB_OUTPUT
            echo "No changes detected after route tree generation"
          else
            echo "has-changes=true" >> $GITHUB_OUTPUT
            echo "Changes detected after route tree generation"
            git diff --staged --name-only
          fi

      - name: Commit and push changes
        if: steps.changes.outputs.has-changes == 'true'
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git commit -m "chore(router): regenerate route tree after dependency update

          Auto-generated by GitHub Actions after Renovate dependency update.

          Co-authored-by: renovate[bot] <29139614+renovate[bot]@users.noreply.github.com>"
          git push

      - name: Add PR comment
        if: steps.changes.outputs.has-changes == 'true'
        uses: actions/github-script@60a0d83039c74a4aee543508d2ffcb1c3799cdea # v7
        with:
          script: |
            const { data: comments } = await github.rest.issues.listComments({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
            });

            const botComment = comments.find(comment => 
              comment.user.login === 'github-actions[bot]' && 
              comment.body.includes('Route tree regenerated')
            );

            const commentBody = `ðŸ”„ **Route tree regenerated**

            The route tree has been automatically regenerated due to dependency changes in this PR.

            Generated files have been committed to this branch.`;

            if (botComment) {
              await github.rest.issues.updateComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                comment_id: botComment.id,
                body: commentBody
              });
            } else {
              await github.rest.issues.createComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: context.issue.number,
                body: commentBody
              });
            }

      - name: No changes needed
        if: steps.changes.outputs.has-changes == 'false'
        run: echo "âœ… Route tree is already up to date"
